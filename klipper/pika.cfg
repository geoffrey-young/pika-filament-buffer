# this is a helpful macro for easily testing toolhead unload/buffer load sequence
#
# !!! you must remove the bowden from the toolhead before running this macro.  you've been warned !!!
#
# the macro call will:
#
#  - select a tool
#  - prime the filament in the gate
#  - advance filament the length of the reverse bowden to simulate toolhead load
#  - advance filament to simulate extrusion
#  - retract filament the length of the reverse bowden to simulate toolhead unload
# 
#
# basic usage:
#
#  PIKA_TEST_BUFFER TOOL=[tool] BOWDEN=[ercf_calib_ref]
#
# available options:
#
#  TOOL:         the tool to test.  defaults to T0
#  BOWDEN:       length of the reverse bowden from the toolhead to the ercf.  should be roughly same as ercf_calib_ref.  defaults to 1200mm
#  UNLOAD_SPEED: unload speed, from toolhead into buffer.  defaults to 150mm/s
#  LOAD_SPEED:   load speed, from buffer into toolhead.  defaults to 150mm/s
#  EXTRUDE:      length of filament to "extrude."  defaults to 200mm
#  TIMES:        iterations of the load-extrude-unload cycle
#  LOOPS:        overrides BOWDEN.  number of loops around the wheel inside the pika, useful for buffer need vs capacity testing.  supports 1-8 loops.


[gcode_macro PIKA_TEST_BUFFER]
gcode:
  {% set loops = params.LOOPS | default(0) | int %}
  {% set bowden = params.BOWDEN | default(1200) | int %}
  {% set extrude =  params.EXTRUDE | default(200) | int %}
  {% set times = params.TIMES | default(1) | int %}
  {% set tool = params.TOOL | default(0, True) | int %}
  {% set uspeed = params.UNLOAD_SPEED | default(150) | int %}
  {% set lspeed = params.LOAD_SPEED | default(150) | int %}

  _PIKA_CHECK_HOMED

  {% set loops_to_bowden = ({
    1: 300,
    2: 600,
    3: 900,
    4: 1200,
    5: 1500,
    6: 1800,
    7: 2100, 
    8: 2300
  }) %}

  _PIKA_SELECT TOOL={tool}

  {% if loops %}
    {% set bowden = loops_to_bowden[loops] %}
  {% endif %}

  _PIKA_TEST_LOAD LENGTH=50

  _PIKA_CHECK_LOADED

  M118 {"starting test - iterations: %d, bowden: %d, extrude: %d" % (times, bowden, extrude) }

  {% for i in range(times) %}

    {% set e = extrude + (i*times) %}

    {% if i %}
      M118 settling...
      G4 P1000
    {% endif %}

    M118 simulating toolhead load...
    _PIKA_TEST_MOVE MOVE={bowden} SPEED={lspeed}
    M400

    M118 simulating extrude...
    _PIKA_TEST_MOVE MOVE={e} SPEED=10
    M400

    M118 buffering {bowden}mm at {uspeed}...
    _PIKA_TEST_MOVE MOVE=-{bowden} SPEED={uspeed}
    M400
  {% endfor %}

  _PIKA_SERVO_UP

  M118 test complete - gather filament


# and so begins compat...

[gcode_macro _PIKA_CHECK_LOADED]
gcode:
  {% if printer.mmu %}
    M118 XXX skipping load check for now...
  {% else %}
    {% if printer.ercf.loaded_status <= 0 %}
      { action_raise_error("filament not loaded - aborting") }
    {% endif %}
  {% endif %}

[gcode_macro _PIKA_CHECK_HOMED]
gcode:
  {% if printer.mmu %}
    {% if not printer.mmu.is_homed %}
      { action_raise_error("must home ercf first - aborting") }
    {% endif %}
  {% else %}
    {% if not printer.ercf.is_homed %}
      { action_raise_error("must home ercf first - aborting") }
    {% endif %}
  {% endif %}

[gcode_macro _PIKA_TEST_MOVE]
gcode:
  {% if printer.mmu %}
    MMU_TEST_MOVE MOTOR=gear {rawparams}
  {% else %}
    ERCF_TEST_MOVE_GEAR LENGTH={params.MOVE} {rawparams}
  {% endif %}

[gcode_macro _PIKA_SERVO_UP]
gcode:
  {% if printer.mmu %}
    MMU_SERVO POS=up
  {% else %}
    ERCF_SERVO_UP
  {% endif %}

[gcode_macro _PIKA_TEST_LOAD]
gcode:
  {% if printer.mmu %}
    MMU_TEST_LOAD {rawparams}
  {% else %}
    ERCF_TEST_LOAD {rawparams}
  {% endif %}

[gcode_macro _PIKA_SELECT]
gcode:
  {% if printer.mmu %}
    MMU_SELECT {rawparams}
  {% else %}
    ERCF_SELECT {rawparams}
  {% endif %}

